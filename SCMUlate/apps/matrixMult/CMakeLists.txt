configure_file(matMul1tile.scm ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(matMul1tileGPU.scm ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(matMul128x1280.scm ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(matMul128x1280gpu.scm ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)


if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" AND "${CLANG_CXX_FAMILY}" STREQUAL "icpx")
set(PREVIOUS "${CMAKE_CXX_FLAGS}")
set(CMAKE_CXX_FLAGS "-Wall -Wextra -fiopenmp -fstack-protector-all -fstack-protector -march=skylake -fiopenmp -fopenmp-targets=spir64 -DDECLARE_VARIANT=1")
endif()

if (NOT DEFINED NOBLAS)
  set(BLA_VENDOR Intel10_64ilp_seq)
  find_package(BLAS)
  if (NOT BLAS_FOUND)
      message("Could not find MKL")
      set(BLA_VENDOR OpenBLAS)
      find_package(BLAS)
      if (NOT BLAS_FOUND)
          add_definitions("-DNOBLAS")
      else()
          add_definitions("-DBLAS")
      endif()
  else()
      message("Adding MKL Definitions")
      add_definitions("-DMKL")
      add_definitions("-DMKL_ILP64")
      set(MKL_SYCL_LIB "mkl_sycl")
  endif()
else()
  add_definitions("-DNOBLAS")
endif()
add_subdirectory(Codelets)

add_executable(MatMul mainMatMul.cpp)
target_include_directories(MatMul PRIVATE Codelets)

if (DECLARE_VARIANT_ENABLED)
  target_link_libraries (MatMul scm_machine mat_mul_ofl_cod mat_mul_cod scm_system_codelets ${BLAS_LIBRARIES} ${MKL_SYCL_LIB})
  elseif(NOT DEFINED NOBLAS)
  target_link_libraries (MatMul scm_machine mat_mul_cod scm_system_codelets ${BLAS_LIBRARIES})
  else()
  target_link_libraries (MatMul scm_machine mat_mul_cod scm_system_codelets)
endif()

if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" AND "${CLANG_CXX_FAMILY}" STREQUAL "icpx")
set(CMAKE_CXX_FLAGS "${PREVIOUS}")
set(CMAKE_CXX_LINK_FLAGS "")
endif()
