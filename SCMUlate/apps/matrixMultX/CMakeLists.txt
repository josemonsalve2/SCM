configure_file(matMul.scm ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(matMulGPU.scm ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(matMulj_k_i.scm ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(matMulj_k_iGPU.scm ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(matMulUnrroli.scm ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)

if (NOT DEFINED NOBLAS)
  set(BLA_VENDOR Intel10_64ilp_seq)
  find_package(BLAS)
  if (NOT BLAS_FOUND)
  message("Could not find MKL")
      set(BLA_VENDOR OpenBLAS)
      find_package(BLAS)
      if (NOT BLAS_FOUND)
          add_definitions("-DNOBLAS")
      else()
          add_definitions("-DBLAS")
      endif()
  else()
      message("Adding MKL Definitions")
      add_definitions("-DMKL")
      add_definitions("-DMKL_ILP64")
      set(MKL_SYCL_LIB "mkl_sycl")
  endif()
else()
  add_definitions("-DNOBLAS")
endif()
add_subdirectory(Codelets)

add_executable(MatMulX mainMatMul.cpp)
target_include_directories(MatMulX PRIVATE Codelets)

if (DECLARE_VARIANT_ENABLED)
  target_link_libraries (MatMulX scm_machine mat_mul_ofl_codX mat_mul_codX scm_system_codelets ${BLAS_LIBRARIES} ${MKL_SYCL_LIB})
elseif(NOT DEFINED NOBLAS)
  target_link_libraries (MatMulX scm_machine mat_mul_codX scm_system_codelets ${BLAS_LIBRARIES})
else()
  target_link_libraries (MatMulX scm_machine mat_mul_codX scm_system_codelets)
endif()
    
